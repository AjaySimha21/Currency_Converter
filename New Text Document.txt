import React, { useEffect, useState } from 'react';
import { Col, Row, Container, Input } from 'reactstrap';
import axios from 'axios';

const CurrencyConv = () => {

    const [allValues, setAllValues] = useState(["EUR"]);
    const [fromCurrency, setfromCurrency] = useState("");
    const [toCurrency, setToCurrency] = useState("");
    const [amount, setAmount] = useState();
    const [result, setResult] = useState();
    const [oneToOne, setOneToOne] = useState();
    const [twoToTwo, setTwoToTwo] = useState();

    useEffect(() => {
        axios({
            method: "GET",
            url: "https://api.exchangeratesapi.io/latest",
        })
            .then((response) => {
                //console.log(response.data.rates);
                let temp = ["EUR"];
                for (const key in response.data.rates) {

                    temp.push(key);
                }
                setAllValues(temp.sort());
                //console.log(allValues);
            })
            .catch((error) => {
                console.log(error);
            })

    }, [amount]);

    const handleSelect = e => {
        console.log(e.target.name);
        if (e.target.name === "Sandy") {
            setfromCurrency(e.target.value);
            //convCalculate();
        }
        else {
            setToCurrency(e.target.value);
            //convCalculate();
            convCalculate();
        }

    };

    const convCalculate = () => {
        if (fromCurrency !== toCurrency) {
            axios.get(`https://api.exchangeratesapi.io/latest?base=${fromCurrency}&symbols=${toCurrency}`)
                .then((response) => {
                    //console.log(response.data.rates[fromCurrency]);
                    const tempRes = amount * response.data.rates[toCurrency];
                    setResult(tempRes);
                    setOneToOne(response.data.rates[toCurrency]);
                    setTwoToTwo((1 / oneToOne).toFixed(4));
                    console.log(twoToTwo);
                })
                .catch((err) => {
                    alert(err.message);

                })


        }


    };


    return (

        <>
            <h3>Currency converter</h3>
            <p>Please enter the amount you want to convert in any field.</p>
            <Container>
                <Row>
                    <form className="form-inline mb-4">
                        <Col sm={{ size: 'auto', offset: 1 }}>
                            <select
                                name="Sandy"
                                onChange={handleSelect}>
                                {allValues.map((e, key) => <option key={key}>{e}</option>)}
                            </select>
                        </Col>
                        <Col sm={{ size: 'auto', offset: 1 }}>
                            <Input name="amount" type="number" placeholder="Amount" value={amount} onChange={e => setAmount(e.target.value)} />
                            {convCalculate()}
                            <p>1 {fromCurrency} = {oneToOne} {toCurrency}</p>
                        </Col>
                    </form>
                    <form className="form-inline mb-4">
                        <Col sm={{ size: 'auto', offset: 7 }}>
                            <select
                                name="Adelaide"
                                onChange={handleSelect}>
                                {allValues.map((e, key) => <option key={key}>{e}</option>)}
                            </select>
                        </Col>
                        <Col sm={{ size: 'auto', offset: 7 }}>
                            <Input className="form-control " disabled={true} type="number" value={result} placeholder="Amount" />
                            <p>1 {toCurrency} = {twoToTwo} {fromCurrency}</p>
                        </Col>

                    </form>
                </Row>
            </Container>

        </>

    );

}

export default CurrencyConv;